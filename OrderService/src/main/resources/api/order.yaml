openapi: '3.0.3'
info:
  title: Order API
  version: '1.0'
  description: Order API
servers:
  - url: https://localhost:8080
    description: Local server
  - url: https://api.fiap.com
    description: Production server
tags: 
  - name: Order
    description: Order API
paths:
  /orders:
    get:
      tags:
        - Order
      summary: Get all orders
      operationId: getOrders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    post:
      tags:
        - Order
      summary: Create a new order
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal server error
  /orders/{id}:
    get:
      tags:
        - Order
      summary: Get order by id
      operationId: getOrderById
      parameters:
        - name: id
          in: path
          required: true
          description: Order id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    put:
      tags:
        - Order
      summary: Update order by id
      operationId: updateOrderById
      parameters:
        - name: id
          in: path
          required: true
          description: Order id
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrder'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
    delete:
      tags:
        - Order
      summary: Delete order by id
      operationId: deleteOrderById
      parameters:
        - name: id
          in: path
          required: true
          description: Order id
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not found
        '500':
          description: Internal server error
components: 
  schemas:
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        customerId:
          type: string
          format: uuid
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                format: uuid
              quantity:
                type: integer
                format: int32
        total:
          type: number
          format: double
        status:
          type: string
          enum:
            - PENDING
            - APPROVED
            - REJECTED
            - DELIVERED
            - CANCELED
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    CreateOrder:
      type: object
      properties:
        customerId:
          type: string
          format: uuid
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
                format: uuid
              quantity:
                type: integer
                format: int32
      required:
        - customerId
        - items
    UpdateOrder:
      type: object
      properties:
        status:
          type: string
          enum:
            - PENDING
            - APPROVED
            - REJECTED
            - DELIVERED
            - CANCELED
      required:
        - status