version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - tech-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  ms-discovery:
    build: ./ms-discovery
    container_name: ms-discovery
    ports:
      - "8761:8761"
    networks:
      - tech-network
    depends_on:
      mysql:
        condition: service_healthy

  ms-customer:
    build: ./ms-customer
    container_name: ms-customer
    depends_on:
      mysql:
        condition: service_healthy
      ms-discovery:
        condition: service_started
    networks:
      - tech-network

  ms-product:
    build: ./ms-product
    container_name: ms-product
    depends_on:
      mysql:
        condition: service_healthy
      ms-discovery:
        condition: service_started
    networks:
      - tech-network

  ms-order:
    build: ./ms-order
    container_name: ms-order
    depends_on:
      mysql:
        condition: service_healthy
      ms-discovery:
        condition: service_started
    networks:
      - tech-network

  ms-logistic:
    build: ./ms-logistic
    container_name: ms-logistic
    depends_on:
      mysql:
        condition: service_healthy
      ms-discovery:
        condition: service_started
    networks:
      - tech-network

  ms-gateway:
    build: ./ms-gateway
    container_name: ms-gateway
    ports:
      - "8080:8080"
    depends_on:
      ms-customer:
        condition: service_started
      ms-product:
        condition: service_started
      ms-order:
        condition: service_started
      ms-logistic:
        condition: service_started
      ms-discovery:
        condition: service_started
    networks:
      - tech-network

networks:
  tech-network:
    driver: bridge
